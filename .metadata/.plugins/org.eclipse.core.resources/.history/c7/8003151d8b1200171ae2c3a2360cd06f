import java.lang.reflect.Array;
import java.util.Arrays;

public class Sim {
	
	//**********************Main*****************************************
		public static void main(String[] args) {
			Ordenamiento1 ord = new Ordenamiento1();
			MergeSort merge = new MergeSort();
			System.out.println("Arreglo");
			System.out.println(ord.imprimirArr());
			System.out.println(ord.comprobarArregloDes());
			System.out.println(ord.contieneElementoArrOdenadoAsc(4));
			
			Ordenamiento2 lista = new Ordenamiento2();
			
			lista.addNodo(25);
			lista.addNodo(13);
			lista.addNodo(14);
			lista.addNodo(15);
			lista.addNodo(16);
			lista.addNodo(17);
			System.out.println();
			System.out.println("Lista Vinculada");
			System.out.println(lista.toString());
			System.out.println(lista.getOrdenadaDes());
			System.out.println(lista.buscarElemento(25));
			
			BurbujeoSeleccion sel = new BurbujeoSeleccion();
			
			System.out.println("Arreglo Ordenado Seleccion");
			System.out.println(sel.imprimirArr());
			sel.ordenarSeleccion();
			System.out.println(sel.imprimirArr());
			
			BurbujeoSeleccion burbuja = new BurbujeoSeleccion();
			
			System.out.println("Arreglo Ordenado Burbuja");
			System.out.println(burbuja.imprimirArr());
			burbuja.ordenarBurbuja();
			System.out.println(burbuja.imprimirArr());
			
			int[] arrayMerge = {16,5,53,64,95,1,14,146,241};
			for (int i = 0; i < arrayMerge.length; i++) {
				System.out.print(" " + arrayMerge[i]);
			}
			System.out.println();
			long startTime = System.nanoTime();
			merge.sort(arrayMerge);
			long endTime = System.nanoTime();
			System.out.println("Took "+(endTime - startTime) + " ns");
			for (int i = 0; i < arrayMerge.length; i++) {
				System.out.print(" " + arrayMerge[i]);
			}
			System.out.println();
			int[] arrayMerge2 = {16,5,53,64,95,1,14,146,241};
			long startTime2 = System.nanoTime();
			Arrays.sort(arrayMerge2);
			long endTime2 = System.nanoTime();
			System.out.println("Took "+(endTime2 - startTime2) + " ns");
		}


}